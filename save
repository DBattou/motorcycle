// Create canvas
document.body.style.margin = '0px'
var canvas = document.createElement('canvas')
var context = canvas.getContext('2d')
canvas.height = window.innerHeight
canvas.width = window.innerWidth
document.body.appendChild(canvas)

var perm = []
while (perm.length < 255) {
  while (perm.includes((val = Math.floor(Math.random() * 255))));
  perm.push(val)
}

var lerp = (a, b, t) => a + ((b - a) * (1 - Math.cos(t * Math.PI))) / 2
var noise = (x) => {
  originalX = x
  x = (x * 0.01) % 254

  return lerp(perm[Math.floor(x)], perm[Math.ceil(x)], x - Math.floor(x))
}

function calcAngleDegrees(x, y) {
  return (Math.atan2(y, x) * 180) / Math.PI
}

var player = new (function () {
  this.x = canvas.width / 2
  this.y = 0
  this.ySpeed = 0
  this.rot = 0
  this.rSpeed = 0

  this.img = new Image()
  this.img.src = 'moto.png'
  this.draw = function () {
    var p1 = canvas.height - noise(t + this.x) * 0.25
    var p2 = canvas.height - noise(t + 5 + this.x) * 0.25

    var grounded = 0
    if (this.y < p1) {
      this.ySpeed += 0.1
    } else {
      this.ySpeed -= this.y - p1
      this.y = p1
      grounded = 1
    }

    // var angle = Math.atan2(p2 - 31 - this.y, this.x + 5 - this.x)
    var angle = calcAngleDegrees(p2 - p1, 5)
    console.log(angle, 'degrÃ©')

    // this.y += this.ySpeed
    // console.log(angle)
    if (grounded) {
      this.rot = angle
      // this.rSpeed = this.rSpeed - (angle - this.rot)
    }

    // this.rot -= this.rSpeed * 0.1

    context.save()
    context.translate(this.x, this.y)
    // context.rotate(this.rot)
    context.drawImage(this.img, -15, -46, 50, 50)
    context.restore()
  }
})()

// var can = document.getElementById('canvas1');
// var ctx = can.getContext('2d');

// ctx.fillRect(50,50,50,50); // something in the background

// var img = new Image();
// img.onload = function() {
//     ctx.drawImage(img, 0, 0);
// }
//   img.src = "http://upload.wikimedia.org/wikipedia/commons/thumb/4/47/PNG_transparency_demonstration_1.png/280px-PNG_transparency_demonstration_1.png"; //transparent png

// Draw on canvas
var t = 0
function draw() {
  t = t
  context.fillStyle = 'green'
  context.fillRect(0, 0, canvas.width, canvas.height)

  context.fillStyle = 'black'
  context.beginPath()
  context.moveTo(0, canvas.height)

  for (let i = 0; i <= canvas.width; i++) {
    context.lineTo(i, canvas.height - noise(t + i) * 0.25)
  }

  context.lineTo(canvas.width, canvas.height)
  context.fill()

  player.draw()
  requestAnimationFrame(draw)
}

draw()
// function draw() {
//   context.fillStyle = 'rgb(200, 0, 0)'

//   context.fillRect(0, 0, context.width, context.height)
//   requestAnimationFrame(draw)
// }

// draw()
